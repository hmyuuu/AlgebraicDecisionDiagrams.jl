name: CI

on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:
  workflow_dispatch:

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.9'
          - '1.10'
          - '1'  # Latest stable release
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v4

      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}

      - uses: julia-actions/cache@v2

      - uses: julia-actions/julia-buildpkg@v1

      - uses: julia-actions/julia-runtest@v1

      - uses: julia-actions/julia-processcoverage@v1

      # Codecov disabled - uncomment when ready to use
      # - uses: codecov/codecov-action@v4
      #   with:
      #     files: lcov.info
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     fail_ci_if_error: false

  docs:
    name: Documentation Build Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'

      - uses: julia-actions/cache@v2

      - name: Install dependencies
        run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()'

      - name: Build docs (test only, no deployment)
        run: julia --project=docs -e 'using Documenter; include("docs/make.jl")'
